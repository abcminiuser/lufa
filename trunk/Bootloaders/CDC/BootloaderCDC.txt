/** \file
 *
 *  This file contains special DoxyGen information for the generation of the main page and other special
 *  documentation pages. It is not a project source file.
 */

/** \mainpage CDC Class USB AVR Bootloader
 *
 *  \section SSec_Compat Demo Compatibility:
 *
 *  The following list indicates what microcontrollers are compatible with this demo.
 *
 *  - Series 7 USB AVRs (AT90USBxxx7)
 *  - Series 6 USB AVRs (AT90USBxxx6)
 *  - Series 4 USB AVRs (ATMEGAxxU4)
 *  - Series 2 USB AVRs (AT90USBxx2, ATMEGAxxU2)
 *
 *  \section SSec_Info USB Information:
 *
 *  The following table gives a rundown of the USB utilization of this demo.
 *
 *  <table>
 *   <tr>
 *    <td><b>USB Mode:</b></td>
 *    <td>Device</td>
 *   </tr>
 *   <tr>
 *    <td><b>USB Class:</b></td>
 *    <td>Communications Device Class (CDC)</td>
 *   </tr>
 *   <tr>
 *    <td><b>USB Subclass:</b></td>
 *    <td>Abstract Control Model (ACM)</td>
 *   </tr>
 *   <tr>
 *    <td><b>Relevant Standards:</b></td>
 *    <td>USBIF CDC Class Standard</td>
 *   </tr>
 *   <tr>
 *    <td><b>Usable Speeds:</b></td>
 *    <td>Full Speed Mode</td>
 *   </tr>
 *  </table>
 *
 *  \section SSec_Description Project Description:
 *
 *  This bootloader enumerates to the host as a CDC Class device (virtual serial port), allowing for AVR109
 *  protocol compatible programming software to load firmware onto the AVR.
 *
 *  Out of the box this bootloader builds for the USB1287, and will fit into 4KB of bootloader space. If
 *  you wish to enlarge this space and/or change the AVR model, you will need to edit the BOOT_START and MCU
 *  values in the accompanying makefile.
 *
 *  This bootloader is compatible with the open source application AVRDUDE, or Atmel's AVRPROG.
 *
 *  After running this bootloader for the first time on a new computer, you will need to supply the .INF
 *  file located in this bootloader project's directory as the device's driver when running under Windows.
 *  This will enable Windows to use its inbuilt CDC drivers, negating the need for custom drivers for the
 *  device. Other Operating Systems should automatically use their own inbuilt CDC-ACM drivers.
 *
 *  \section SSec_Options Project Options
 *
 *  The following defines can be found in this demo, which can control the demo behaviour when defined, or changed in value.
 *
 *  <table>
 *   <tr>
 *    <td>NO_BLOCK_SUPPORT</td>
 *    <td>Makefile LUFA_OPTS</td>
 *    <td>Define to disable memory block read/write support in the bootloader, requiring all reads and writes to be made
 *        using the byte-level commands.
 *   </tr>
 *   <tr>
 *    <td>NO_EEPROM_BYTE_SUPPORT</td>
 *    <td>Makefile LUFA_OPTS</td>
 *    <td>Define to disable EEPROM memory byte read/write support in the bootloader, requiring all EEPROM reads and writes
 *        to be made using the block-level commands.
 *   </tr>
 *   <tr>
 *    <td>NO_FLASH_BYTE_SUPPORT</td>
 *    <td>Makefile LUFA_OPTS</td>
 *    <td>Define to disable FLASH memory byte read/write support in the bootloader, requiring all FLASH reads and writes
 *        to be made using the block-level commands.
 *   </tr>
 *   <tr>
 *    <td>NO_LOCK_BYTE_WRITE_SUPPORT</td>
 *    <td>Makefile LUFA_OPTS</td>
 *    <td>Define to disable lock byte write support in the bootloader, preventing the lock bits from being set progmatically.
 *   </tr>
 *  </table>
 */

